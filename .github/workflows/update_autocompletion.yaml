name: Update auto completion yaml

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      # Template change
      - "./autocompletion/templates/*.yaml"
      # GH change
      - ".github/workflows/update_autocompletion.yml"
      - ".github/scripts/update_autocompletion.sh"

jobs:
  update_autocompletion_yaml:
    name: update autocompletion yaml
    concurrency: git_commits
    runs-on: ubuntu-latest
    steps:
      # Standard checkout step
      - name: Checkout code
        id: git_checkout
        uses: actions/checkout@v2
      # Run autocompletion script
      - id: update_autocompletion
        name: update autocompletion
        run: |
          docker run \
             --rm \
             --user "$(id -u):$(id -g)" \
             --volume  "$PWD:$PWD" \
             --workdir "$PWD" \
             --entrypoint "bash" \
             ghcr.io/alexiswl/app-appspec-p5:v0.007 \
               ".github/scripts/update_autocompletion.sh"
      # Commit to github
      - id: commit_configuration_yaml_files
        name: Commit configuration yaml files
        uses: EndBug/add-and-commit@v7.2.1
        with:
          add: "autocompletion/"
          default_author: github_actions
          message: "Updating autocompletion - (Autogenerated github actions commit)"
          # Don't push, we push manually in the next step if
          push: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Push config files
      - name: Push code
        id: git_push
        if: ${{ steps.commit_configuration_yaml_files.outputs.committed == 'true' }}
        run: |
          # Get current branch
          if [[ -n "${{ github.event.pull_request.head.ref }}" ]]; then
            # When its a pr even
            CURRENT_BRANCH="${{ github.event.pull_request.head.ref }}"
          elif [[ -n "${GITHUB_REF_NAME-}" ]]; then
            # Manual workflow
            CURRENT_BRANCH="${GITHUB_REF_NAME}"
          else
            echo "DEBUG: $(printenv | grep GITHUB_)"
            echo "Cannot get the ref name"
          fi

          # Pull first (might have had another action complete a commit)
          git pull --rebase origin "${CURRENT_BRANCH}"

          # Then push
          git push origin "${CURRENT_BRANCH}"
